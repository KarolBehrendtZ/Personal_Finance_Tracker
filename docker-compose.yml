services:
  postgres:
    image: postgres:15-alpine
    container_name: finance_db
    environment:
      POSTGRES_DB: finance_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - finance_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: finance_api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: finance_tracker
      DB_SSLMODE: disable
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - finance_network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  etl_worker:
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: finance_etl
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: finance_tracker
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - finance_network
    volumes:
      - ./data:/app/data
      - ./python:/app/python
      - ./logs:/app/logs
    restart: unless-stopped
    command: ["python", "-c", "import time; time.sleep(3600)"]

  nginx:
    image: nginx:alpine
    container_name: finance_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/ssl:/etc/nginx/ssl
    depends_on:
      - api
    networks:
      - finance_network
    restart: unless-stopped

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: finance_dashboard
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: finance_tracker
      API_URL: http://api:8080/api/v1
    ports:
      - "8501:8501"
    depends_on:
      - api
      - postgres
    networks:
      - finance_network
    volumes:
      - ./dashboard:/app/dashboard
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  finance_network:
    driver: bridge
